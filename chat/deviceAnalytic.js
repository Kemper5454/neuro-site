async function logFullDeviceInfo() {
    const ua = navigator.userAgent;

    const uaLower = ua.toLowerCase();
    const platform = /android/.test(uaLower)
        ? 'Android'
        : /iphone|ipad|ipod/.test(uaLower)
        ? 'iOS'
        : /windows/.test(uaLower)
        ? 'Windows'
        : /mac/.test(uaLower)
        ? 'macOS'
        : 'Other';

    let browser = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä";
    if (ua.includes("YaBrowser")) {
        browser = "–Ø–Ω–¥–µ–∫—Å.–ë—Ä–∞—É–∑–µ—Ä";
    } else if (ua.includes("OPR") || ua.includes("Opera")) {
        browser = "Opera";
    } else if (ua.includes("Edg")) {
        browser = "Microsoft Edge";
    } else if (ua.includes("Firefox")) {
        browser = "Mozilla Firefox";
    } else if (ua.includes("Chrome")) {
        browser = "Google Chrome";
    } else if (ua.includes("Safari")) {
        browser = "Safari";
    }

    const nowInMSK = new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Moscow" }));

    const enterTime = Date.now();

    window.addEventListener("beforeunload", () => {
        const leaveTime = Date.now();
        const totalSeconds = Math.floor((leaveTime - enterTime) / 1000);
        console.log(`–í—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–∞–π—Ç–µ: ${totalSeconds} —Å–µ–∫—É–Ω–¥`);
    });

    let ip = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å';
    try {
        const res = await fetch("https://api.ipify.org?format=json");
        const data = await res.json();
        ip = data.ip;
    } catch (e) {
        console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ IP:", e);
    }

    console.log("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:");
    console.log("–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:", platform);
    console.log("–ë—Ä–∞—É–∑–µ—Ä:", browser);
    console.log("IP-–∞–¥—Ä–µ—Å:", ip);
    console.log("–í—Ä–µ–º—è –∑–∞—Ö–æ–¥–∞ (–ú–æ—Å–∫–≤–∞):", nowInMSK.toLocaleString("ru-RU"));
}

logFullDeviceInfo();